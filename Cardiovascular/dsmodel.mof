// Translated Modelica model generated by Dymola from Modelica model 
//  Cardiovascular.Examples.DizertaceExample.Windkessel_2element_dizertace


// -----------------------------------------------------------------------------

// Initial Section
  heart.useSolutionFlowInput := true;
  arteries.dirName := "io";
  arteries.useV0Input := false;
  arteries.useComplianceInput := false;
  arteries.useExternalPressureInput := false;
  resistance.useConductanceInput := false;
  veins.usePressureInput := false;
  arteries.Simulation := Physiolibrary.Types.SimulationType.NormalInit;
  arteries.isDependent := false;
  arteries.storeUnit := "ml";
  arteries.stateName := "Windkessel_2element_dizertace.arteries";
  arteries.LOAD_STARTS := false;
  arteries.SAVE_RESULTS := false;
  arteries.SAVE_COMPARISON := false;
  veins.isIsolatedInSteadyState := true;
  veins.Simulation := Physiolibrary.Types.SimulationType.NormalInit;
// -----------------------------------------------------------------------------

// Bound Parameter Section
  arteries.state_start := arteries.volume_start;
  arteries.a := arteries.MinimalCollapsingPressure/(-34.538776394910684);
// -----------------------------------------------------------------------------

// Initial Section
  heart.solutionFlow := heart.SolutionFlow;
  arteries.state := arteries.state_start;
  pulses.HP_.start := pulses.HP;
  pulses.T0_.start := pulses.T0;
  arteries.state_start := arteries.volume_start;
  arteries.a := arteries.MinimalCollapsingPressure/(-34.538776394910684);
  arteries.defaultValue := 6.0221415E+23;
  arteries.state := arteries.state_start;
  arteries.initialValue := arteries.state;
  pulses.T0 := time;
  pulses.HP := 1/pulses.HR;
  pulses.TD2 := pulses.TD1+0.4*pulses.HP;


// -----------------------------------------------------------------------------

// Dynamics Section
  pulses.b := time-pre(pulses.T0) >= pre(pulses.HP);
  when pulses.b then
    pulses.T0 := time;
  end when;
  pulses.tc := time-pulses.T0;
  when pulses.b then
    pulses.HP := 1/pulses.HR;
  end when;
  when pulses.b then
    pulses.TD2 := pulses.TD1+0.4*pulses.HP;
  end when;
  heart.solutionFlow := (if pulses.tc < pulses.TD1 then 0 else (if pulses.tc < 
    pulses.TD2 then sin(3.141592653589793*(pulses.tc-pulses.TD1)/(pulses.TD2-
    pulses.TD1))*pulses.QP else 0));
  arteries.excessVolume := max(0, arteries.state-arteries.ZeroPressureVolume);
  heart.q_out.pressure := smooth(0, (if noEvent(arteries.state > 
    arteries.CollapsingPressureVolume) then arteries.excessVolume/
    arteries.Compliance+arteries.ExternalPressure else arteries.a*log(max(1E-15,
     arteries.state/arteries.CollapsingPressureVolume))));
  resistance.q_in.q := resistance.Conductance*(heart.q_out.pressure-veins.P);
  der(arteries.state) := heart.solutionFlow-resistance.q_in.q;
  heart1.qout.p := arteries1.p0+(if arteries1.V < arteries1.V0 then 0 else (
    arteries1.V-arteries1.V0)/arteries1.C);
  resistance1.qin.q := resistance1.G*(heart1.qout.p-veins1.contrapressure);
  der(arteries1.V) := heart.solutionFlow-resistance1.qin.q;


// -----------------------------------------------------------------------------

// Conditionally Accepted Section
  resistance.dp := heart.q_out.pressure-veins.P;

// -----------------------------------------------------------------------------

// Eliminated alias variables
  // To have eliminated alias variables listed, set
  //   Advanced.OutputModelicaCodeWithAliasVariables = true
  // before translation. May give much output.
